set val(chan)         Channel/WirelessChannel  ;# channel type
set val(prop)         Propagation/TwoRayGround ;# radio-propagation model
set val(ant)          Antenna/OmniAntenna      ;# Antenna type
set val(ll)           LL                       ;# Link layer type
set val(ifq)          Queue/DropTail/PriQueue  ;# Interface queue type
set val(ifqlen)       200                       ;# max packet in ifq
set val(netif)        Phy/WirelessPhy          ;# network interface type
set val(mac)          Mac/802_11               ;# MAC type
set val(rp)           AODV                     ;# ad-hoc routing protocol 
set val(nn)           10                      ;# number of mobilenodes
set val(stop)         150.0                        ;# number of mobilenodes
set val(x) 500
set val(y) 500
set ns [new Simulator]
set tracefd [open sample.tr w]
set namtrace [open sample.nam w]
$ns trace-all $tracefd
$ns namtrace-all-wireless $namtrace $val(x) $val(y)           
set topo [new Topography]
$topo load_flatgrid $val(x) $val(y)
create-god $val(nn)
  $ns node-config -adhocRouting $val(rp) \
                         -llType $val(ll) \
                         -macType $val(mac) \
                         -ifqType $val(ifq) \
                         -ifqLen $val(ifqlen) \
                         -antType $val(ant) \
                         -propType $val(prop) \
                         -phyType $val(netif) \
                         -topoInstance $topo \
			 -energyModel "EnergyModel"\
			 -initialEnergy 0.5\
		         -txPower 0.175\
			 -rxPower 0.175\
			 -idlePower 1.0\
			 -sensePower 0.00000175\
			 -sleepPower 0.001\
			 -transitionPower 0.2\
			 -transitionTime 0.005\
                         -channelType $val(chan) \
                         -agentTrace ON \
                         -routerTrace ON \
                         -macTrace ON \
                         -movementTrace ON 
			 
#================================================================================
 proc finish {} {
        global ns tracefd namtrace
        $ns flush-trace
        close $namtrace
        exec nam sample.nam &
        exit 0
}
#===============================================================================
proc record {} {
  global node-id1 sink(0) sink(1) sink(2) sink(3) sink(4) sink(5) sink(6) sink(7) sink(8) sink(9) f0   
 
#Get An Instance Of The Simulator
   set ns [Simulator instance]
    
#Set The Time After Which The Procedure Should Be Called Again
   set time 0.05
 
#Get The Current Time
   set now [$ns now]
    
 
#Re-Schedule The Procedure
   $ns at [expr $now+$time] "record"
}
#================================================================================
for {set i 0} {$i < $val(nn)} { incr i } {
set n($i) [$ns node]
$n($i) random-motion 0  ;# disable random motion
$n($i) color red
$ns initial_node_pos $n($i) 15+i*10
$ns at 0.0 "$n($i) label nodes"
}

$ns at 0.0 "$n(0) setdest 50.0 50.0 10000.0"
$ns at 0.0 "$n(1) setdest 50.0 150.0 10000.0"
$ns at 0.0 "$n(2) setdest 50.0 250.0 10000.0"
$ns at 0.0 "$n(3) setdest 50.0 5.0.0 10000.0"
$ns at 0.0 "$n(4) setdest 50.0 450.0 10000.0"
$ns at 0.0 "$n(5) setdest 150.0 50.0 10000.0"
$ns at 0.0 "$n(6) setdest 150.0 150.0 10000.0"
$ns at 0.0 "$n(7) setdest 150.0 250.0 10000.0"
$ns at 0.0 "$n(8) setdest 150.0 5.0.0 10000.0"
$ns at 0.0 "$n(9) setdest 150.0 450.0 10000.0"





$ns at 0.3 "$n(1) setdest 50.0 50.0 50.0"
$ns at 0.3 "$n(5) setdest 50.0 150.0 50.0"
$ns at 0.3 "$n(6) setdest 50.0 250.0 50.0"
$ns at 0.3 "$n(4) setdest 50.0 5.0.0 50.0"
$ns at 0.3 "$n(9) setdest 50.0 450.0 50.0"
$ns at 0.3 "$n(7) setdest 150.0 499.0 50.0"
$ns at 0.3 "$n(0) setdest 150.0 50.0 50.0"
$ns at 0.3 "$n(2) setdest 150.0 5.0.0 50.0"
$ns at 0.3 "$n(3) setdest 150.0 450.0 50.0"
$ns at 0.3 "$n(8) setdest 250.0 450.0 50.0"




$ns at 3.1 "$n(0) setdest 450.0 150.0 50.0"
$ns at 3.1 "$n(1) setdest 450.0 50.0 50.0"
$ns at 3.1 "$n(2) setdest 150.0 150.0 50.0"
$ns at 3.1 "$n(3) setdest 50.0 150.0 50.0"
$ns at 3.1 "$n(4) setdest 150.0 50.0 50.0"
$ns at 3.1 "$n(5) setdest 5.0.0 50.0 50.0"
$ns at 3.1 "$n(6) setdest 250.0 50.0 50.0"
$ns at 3.1 "$n(7) setdest 250.0 150.0 50.0"
$ns at 3.1 "$n(8) setdest 50.0 250.0 50.0"
$ns at 3.1 "$n(9) setdest 50.0 50.0 50.0"






#==================================================================================
# CONFIGURE AND SET UP A FLOW
set sink(0) [new Agent/LossMonitor]
set sink(1) [new Agent/LossMonitor]
set sink(2) [new Agent/LossMonitor]
set sink(3) [new Agent/LossMonitor]
set sink(4) [new Agent/LossMonitor]
set sink(5) [new Agent/LossMonitor]
set sink(6) [new Agent/LossMonitor]
set sink(7) [new Agent/LossMonitor]
set sink(8) [new Agent/LossMonitor]
set sink(9) [new Agent/LossMonitor]




                                                                                                                                      
#===================================================================================
$ns attach-agent $n(0) $sink(0)
$ns attach-agent $n(1) $sink(1)
$ns attach-agent $n(2) $sink(2)
$ns attach-agent $n(3) $sink(3)
$ns attach-agent $n(4) $sink(4)
$ns attach-agent $n(5) $sink(5)
$ns attach-agent $n(6) $sink(6)
$ns attach-agent $n(7) $sink(7)
$ns attach-agent $n(8) $sink(8)
$ns attach-agent $n(9) $sink(9)



#===================================================================================
#transmission control protocol
set tcp0 [new Agent/TCP]
$ns attach-agent $n(0) $tcp0
set tcp1 [new Agent/TCP]
$ns attach-agent $n(1) $tcp1
set tcp2 [new Agent/TCP]
$ns attach-agent $n(2) $tcp2
set tcp3 [new Agent/TCP]
$ns attach-agent $n(3) $tcp3
set tcp4 [new Agent/TCP]
$ns attach-agent $n(4) $tcp4
set tcp5 [new Agent/TCP]
$ns attach-agent $n(5) $tcp5
set tcp6 [new Agent/TCP]
$ns attach-agent $n(6) $tcp6
                                                                                                                 
set tcp7 [new Agent/TCP]
$ns attach-agent $n(7) $tcp7
set tcp8 [new Agent/TCP]
$ns attach-agent $n(8) $tcp8
set tcp9 [new Agent/TCP]
$ns attach-agent $n(9) $tcp9




set cbr1 [new Application/Traffic/CBR]
$cbr1 attach-agent $tcp0
$cbr1 set type_ CBR
$cbr1 set packet_size_ 1000
$cbr1 set rate_ 1mb
$cbr1 set random_ false
$ns connect $tcp0 $sink(1)
$ns at 0.1 "$cbr1 start"

set cbr2 [new Application/Traffic/CBR]
$cbr2 attach-agent $tcp2
$cbr2 set type_ CBR
$cbr2 set packet_size_ 1000
$cbr2 set rate_ 1mb
$cbr2 set random_ false
$ns connect $tcp2 $sink(3)
$ns at 0.2 "$cbr2 start"
#=====================================================================================
$ns at 10 "finish"
#=====================================================================================
#======================================================================================

$ns run 
#======================================================================================


